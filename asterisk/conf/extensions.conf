[general]
static=yes       ; These two lines prevent the command-line interface
writeprotect=yes ; from overwriting the config file. Leave them here.

[bogon-calls]
exten => _.,1,Congestion 

[internal]
include => outbound
include => people
include => rooms
include => menus
include => intercoms
include => test
include => phones

[phones]
#exec curl tftp:8080/asterisk_extens

[macro-endcallerid]
exten => s,1,System("/usr/bin/callerid-stop")

[directory]
exten => start,1,NoOp
same => n,Espeak("Dial the first three letters of your party's name. Or, for a listing, press zero or wait.",any)
same => n,WaitExten(6)
same => n,Goto(0,1)

exten => i,1,Goto(start,1)
exten => t,1,Goto(0,1)

exten => 395,1,Goto(inbound,395,1)
exten => 1,1,Goto(inbound,395,1)

exten => 537,1,Goto(inbound,537,1)
exten => 2,1,Goto(inbound,537,1)

exten => 627,1,Goto(inbound,627,1)
exten => 3,1,Goto(inbound,627,1)

exten => 727,1,Goto(inbound,727,1)
exten => 4,1,Goto(inbound,727,1)

exten => 5,1,Goto(inbound,t,1)

exten => 0,1,NoOp
same => n,Espeak("For Dylan, dial 1.",any)
same => n,Espeak("For Jerry, dial 2.",any)
same => n,Espeak("For Mark, dial 3.",any)
same => n,Espeak("For Sasha, dial 4.",any)
same => n,Espeak("For everyone, dial 5.",any)

[inbound]
exten => _+{{ salt['pillar.get']('asterisk_credentials:number') }},1,Goto(inbound,s,1)

exten => s,1,Answer()
;same => n,GotoIf("${CALLERID(num)}" = "2024558888"?inbound,5,call)
same => n,Playback(silence)
same => n(loop),Espeak("You have reached Hackaf A.",any)
same => n,Espeak("Press 0 for assistance, or wait to call everyone.",any)
same => n,WaitExten(3)
;same => n,Goto(5,1)

exten => 0,1,Espeak("I should really implement this",any)
same => n,Goto(directory,start,1)

exten => 395,1,Espeak("Calling Dylan",any)
same => n,Dial(SIP/dylan,10,mM(endcallerid))
same => n,Set(target=dylan)
same => n,Set(cell={{salt['pillar.get']('people:cell:dylan')}})
same => n,Goto(noanswer,1)

exten => 627,1,Espeak("Calling Mark",any)
same => n,Dial(SIP/mark,10,mM(endcallerid))
same => n,Set(target=mark)
same => n,Set(cell={{salt['pillar.get']('people:cell:mark')}})
same => n,Goto(noanswer,1)

exten => 727,1,Espeak("Calling Sasha",any)
same => n,Dial(SIP/sasha,10,mM(endcallerid))
same => n,Set(target=sasha)
same => n,Set(cell={salt['pillar.get']('people:cell:sasha')})
same => n,Goto(noanswer,1)

exten => t,1,Espeak("Calling everyone",any)
same => n,System("/usr/bin/callerid-start '${CALLERID(name)}' '${CALLERID(num)}'")
same => n(call),Dial(SIP/kitchen&SIP/den&SIP/den2&SIP/garage&SIP/garage2&SIP/dylan&SIP/jerry&SIP/mark&SIP/noah&SIP/sasha&SIP/laundry,30,mM(endcallerid))
same => n,Playback(followme/sorry)
same => n,Hangup()

exten => 8,1,Goto(eight,start,1)

exten => noanswer,1,NoOp
same => n,System("/usr/bin/callerid-start '${CALLERID(name)}' '${CALLERID(num)}'")
same => n,Dial(SIP/${target}&SIP/kitchen&SIP/den&SIP/garage&SIP/garage2&SIP/laundry,30,mM(endcallerid))
same => n,Goto(outbound,${cell},1)
same => n,Playback(followme/sorry)
same => n,Hangup

exten => 1337,1,Espeak("Welcome to the secret menu",any)
same => n,Goto(menus,1337,1)

exten => i,1,Espeak(Nope)
same => n,Goto(inbound-menu,s,loop)

exten => h,1,Macro(endcallerid)

;exten => s,1,Goto(inbound-menu,start,1)
;exten => s,1,Dial(SIP/kitchen&SIP/den&SIP/garage&SIP/dylan&SIP/mark&SIP/sasha,20)
;exten => 2408982516,1,Answer
;exten => 2408982516,n,Dial(SIP/kitchen,20)
;exten => 2408982516,102,Playback(vm-sorry)
;exten => 2408982516,103,Hangup

[outbound]
exten => _NXXXXXXXXX!,1,GoTo(twilio0,${EXTEN},1)
;exten => 9312,1,Set(CALLERID(all)="Hackafe" <4105551234>)
;exten => 9312,n,Dial(SIP/4106889312@twilio0,99,TK)
;exten => _9NXXXXXXXXX!,1,Goto(twilio0,${EXTEN:1},1)

[twilio0]
exten => _X.,1,NoOp(Routing via twilio0)
exten => _X.,n,Playback(connecting)
exten => _X.,n,Dial(SIP/+1${EXTEN}@twilio0,99,TK)
exten => h,1,NoOp(Call ended)
exten => h,2,Hangup
;exten => _X.,1,Playback(connecting)
;exten => _X.,n,Set(CALLERID(all)="Hackafe" <2408982516>)
;exten => _X.,n,Dial(SIP/${EXTEN}@twilio0,99,TK)
;exten => h,1,Hangup

[people]
; If the number dialed by the calling party was "2000", then
; Dial the user "2000" via the SIP channel driver. Let the number
; ring for 20 seconds, and if no answer, proceed to priority 2.
; If the number gives a "busy" result, then jump to priority 102
exten => 395,1,Dial(SIP/dylan,20)

; Priority 2 send the caller to voicemail, and gives the "u"navailable
; message for user 2000, as recorded previously. The only way out
; of voicemail in this instance is to hang up, so we have reached
; the end of our priority list.
exten => 395,2,Voicemail(udylan)

; If the Dialed number in priority 1 above results in
; a "busy" code, then Dial will jump to 101 + (current priority)
; which in our case will be 101+1=102. This +101 jump is built
; into Asterisk and does not need to be defined.
exten => 395,102,Voicemail(bdylan)
exten => 395,103,Hangup

; Now, what if the number dialed was "2001"?
exten => 627,1,Dial(SIP/mark,20)
exten => 627,2,Voicemail(umark)
exten => 627,102,Voicemail(bmark)
exten => 627,103,Hangup

exten => 727,1,Dial(SIP/sasha,20)
exten => 727,2,Voicemail(usasha)
exten => 727,102,Voicemail(bsasha)
exten => 727,103,Hangup

exten => 662,1,Dial(SIP/noah,20)
exten => 662,2,Voicemail(unoah)
exten => 662,102,Voicemail(bnoah)
exten => 662,103,Hangup

exten => 537,1,Dial(SIP/noah,20)
exten => 537,2,Voicemail(unoah)
exten => 537,102,Voicemail(bnoah)
exten => 537,103,Hangup

; Define a way so that users can dial a number to reach
; voicemail. Call the VoicemailMain application with the
; number of the caller already passed as a variable, so
; all the user needs to do is type in the password.

[x10-menu]
exten => 1,1,Espeak("You have selected: X10 Control",any)
exten => 1,n,Espeak("Dial the number of the light you would like to toggle, then 1 for ON and 2 for OFF.",any)
exten => 1,n,Espeak("12: Kitchen Light",any)
exten => 1,n,Espeak("14: Counter Lights",any)
exten => 1,n,Espeak("13: Table Light",any)
exten => 1,n,Espeak("16: Living Room Lamp",any)
exten => 1,n,Espeak("15: Turtle Light",any)
exten => 1,n,Espeak("21: Hallway Light",any)
exten => 1,n,WaitExten(10)
exten => 1,n,Goto(menus,1,1)

exten => 0,1,Goto(menus,1337,1)
exten => _1Z1,1,System(curl vinyl:5000/on/a/${EXTEN:1:1})
exten => _1Z1,n,Espeak("Turning on A${EXTEN:1:1}",any)
exten => _1Z2,1,System(curl vinyl:5000/off/a/${EXTEN:1:1})
exten => _2Z1,1,System(curl vinyl:5000/on/b/${EXTEN:1:1})
exten => _2Z2,1,System(curl vinyl:5000/off/b/${EXTEN:1:1})
exten => _ZZZ,n,Goto(menus,1337,1)

exten => i,1,Espeak("That's not a light and you know it.",any)
exten => i,n,Goto(menus,1,1)


[wakeup-menu]
exten => begin,1,NoOp
same => n,Espeak("Enter the hour and minute for your wake-up call, separated by the pound sign.",any)
same => n(extenloop),WaitExten(6)

exten => _[01]X#[0-5]X,1,NoOp
same => 2,Set(WHOUR=${EXTEN:0:2})
same => 3,Set(WMINUTE=${EXTEN:3:2})
same => n,Goto(setup,1)

exten => _[01]X#X,1,NoOp
same => 2,Set(WHOUR=${EXTEN:0:2})
same => 3,Set(WMINUTE=${EXTEN:3:1})
same => n,Goto(setup,1)

exten => _2[0123]#[0-5]X,1,NoOp
same => 2,Set(WHOUR=${EXTEN:0:2})
same => 3,Set(WMINUTE=${EXTEN:3:2})
same => n,Goto(setup,1)

exten => _2[0123]#X,1,NoOp
same => 2,Set(WHOUR=${EXTEN:0:2})
same => 3,Set(WMINUTE=${EXTEN:3:1})
same => n,Goto(setup,1)

exten => _X#[0-5]X,1,NoOp
same => 2,Set(WHOUR=${EXTEN:0:1})
same => 3,Set(WMINUTE=${EXTEN:2:2})
same => n,Goto(setup,1)

exten => _X#X,1,NoOp
same => 2,Set(WHOUR=${EXTEN:0:1})
same => 3,Set(WMINUTE=${EXTEN:2:1})
same => n,Goto(setup,1)

exten => i,1,Espeak("Time not recognized, try again.",any)
same => n,Goto(extenloop)

exten => setup,1,NoOp
same => n,Espeak("For 'Everything is Awesome', press 1.",any)
same => n,Espeak("For 'Never Gonna Give You Up', press 2.",any)
same => n,Espeak("For 'Duck Army', press 3.",any)
same => n(songwait),WaitExten(3)

exten => 1,1,Set(WSONG="hackafe/awesome")
same => 2,Goto(complete,1)

exten => 2,1,Set(WSONG="hackafe/rick")
same => 2,Goto(complete,1)

exten => 3,1,Set(WSONG="hackafe/duck")
same => 2,Goto(complete,1)

exten => i,1,Espeak("Song not recognized, try again.",any)
same => 2,Goto(setup,1)

exten => t,1,Espeak("Please enter a song.",any)
same => n,Goto(songwait)

exten => complete,1,Espeak("Call scheduled for ${WHOUR}:${WMINUTE}",any)
same => n,System(/usr/bin/wakeupcall "intercom-${CALLERID(num)}" "${WSONG}" "${WHOUR}" "${WMINUTE}")
same => n,Hangup()

[wakeup-target]
exten => 1,1,Answer()
same => n(loop),Background(${SONG})
same => n,Goto(loop)

[pizza-start]
exten => start,1,NoOp
same => n,Set(ORDER_ID=${RAND()})
same => n,Set(NPIZZAS=1)
;same => n,Set(PROMPTED=0)
same => n,Espeak("Welcome to the Hackafay Dial-A-Pizza Hotline.",any)
same => n,WaitExten(1)
same => n,Goto(pizza-size-select,start,1)

exten => i,1,Goto(pizza-size-select,${EXTEN},1)

exten => t,1,Goto(pizza-size-select,start,1)
;same => n,Espeak("You have order ID ${PIZZA_ID}",any)
;same => n(prompt),Espeak("Enter the number of pizzas you would like.",any)
;same => n(countwait),WaitExten(5)

;exten => _XX,1,Set(NPIZZAS=${EXTEN})
;same => 2,Goto(pizza-confirm-count,start,1)

;exten => _X,1,Set(NPIZZAS=${EXTEN})
;same => 2,Goto(pizza-confirm-count,start,1)

;exten => i,1,NoOp
;same => 2,Espeak("Invalid number. Try again.",any)
;same => 3,Goto(countwait)

;exten => t,1,NoOp
;same => n,Goto(prompt)

[pizza-confirm-count]
exten => start,1,NoOp
same => 2,Espeak("You will be ordering ${NPIZZAS} pizzas.",any)
same => 3,Espeak("To change the number of pizzas you would like to order, press 0. To continue, press 1 or stay on the line.",any)
same => 4,WaitExten

exten => _0,1,Goto(pizza-start,start,countwait)
exten => _1,1,Goto(pizza-size-select,start,1)

exten => t,1,Goto(pizza-size-select,start,1)

exten => i,1,Espeak("Not recognized.")
same => 2,Goto(start,4)

[pizza-size-select]
exten => start,1,NoOp
same => n,Espeak("Enter the size for pizza number ${NPIZZAS}.",any)
same => n,Espeak("4: Extra-large",any)
same => n,Espeak("3: Large",any)
same => n,Espeak("2: Medium",any)
same => n,Espeak("1: Small",any)
same => n,WaitExten

exten => 4,1,SET(PIZZA_SIZE="extra-large")
same => n,Goto(done,1)

exten => 3,1,SET(PIZZA_SIZE="large")
same => n,Goto(done,1)

exten => 2,1,SET(PIZZA_SIZE="medium")
same => n,Goto(done,1)

exten => 1,1,SET(PIZZA_SIZE="small")
same => n,Goto(done,1)

exten => done,1,NoOp
same => n,System(pizza add-pizza "${ORDER_ID}" "${PIZZA_SIZE}")
same => n,Goto(pizza-topping-select,start,1)

exten => i,1,NoOp
same => n,Goto(start,prompt)

[pizza-topping-select]
exten => start,1,NoOp
;same => n,GotoIf("${PROMPTED}"?noprompt)
;same => n,Set(PROMPTED=1)
same => n,Espeak("When you are done adding toppings, press 0.",any)
same => n(noprompt),Espeak("1 for meat toppings.",any)
same => n,Espeak("2 for cheese toppings.",any)
same => n,Espeak("3 for vegetable toppings.",any)
same => n(toppings),NoOp
same => n,WaitExten

exten => 0,1,Goto(pizza-done,start,1)

exten => _1,1,Gosub(pizza-meat-select,start,1)
same => n,Goto(pizza-topping-select,donepart,1)

exten => _2,1,Gosub(pizza-cheese-select,start,1)
same => n,Goto(pizza-topping-select,donepart,1)

exten => _3,1,Gosub(pizza-vegetable-select,start,1)
same => n,Goto(pizza-topping-select,donepart,1)

exten => i,1,NoOp
same => n,Espeak("Invalid toppings.",any)
same => n,Goto(start,1)

exten => donepart,1,NoOp
same => n,Set(TOPPING="${GOSUB_RETVAL}")
;same => n,Espeak("gosub retval is ${GOSUB_RETVAL}",any)
;same => n,GotoIf($["${TOPPING}" = "0"]?nomore)
same => n,Gosub(pizza-side-select,start,1)
same => n,Set(SIDE="${GOSUB_RETVAL}")
same => n,System(pizza add-topping "${ORDER_ID}" "${SIDE}" "${TOPPING}")
same => n,Goto(start,1)
;same => n(nomore),Goto(pizza-done,start,1)

[pizza-meat-select]
exten => start,1,NoOp
same => n,Espeak("Meat Toppings:",any)
same => n(toppings),NoOp
same => n,Espeak("1 for pepperoni",any)
same => n,Espeak("2 for spicy italian sausage",any)
same => n,Espeak("3 for grilled chicken",any)
same => n,Espeak("4 for sausage",any)
same => n,Espeak("5 for bacon",any)
same => n,Espeak("6 for canadian bacon",any)
same => n,Espeak("7 for philly cheese steak",any)
same => n,Espeak("8 for beef",any)
same => n,Espeak("9 for anchovies",any)
same => n(after),NoOp
same => n,WaitExten

exten => 0,1,Goto(pizza-done,start,1)

exten => 1,1,Return("pepperoni")
exten => 2,1,Return("spicy italian sausage")
exten => 3,1,Return("grilled chicken")
exten => 4,1,Return("sausage")
exten => 5,1,Return("bacon")
exten => 6,1,Return("canadian bacon")
exten => 7,1,Return("philly cheese steak")
exten => 8,1,Return("beef")
exten => 9,1,Espeak("Oh my",any,en-us)
same => n,Hangup

exten => i,1,NoOp
same => n,Espeak("Invalid topping.",any)
same => n,Goto(toppings)

[pizza-cheese-select]
exten => start,1,NoOp
same => n,Espeak("Cheese Toppings:",any)
same => n(toppings),NoOp
same => n,Espeak("1 for extra cheese",any)
same => n,Espeak("2 for three cheese blend",any)
same => n,Espeak("3 for provolone cheese",any)
same => n,Espeak("4 for parmesan romano",any)
same => n,Espeak("5 for feta cheese",any)
same => n,WaitExten

exten => 0,1,Goto(pizza-done,start,1)

exten => 1,1,Return("extra cheese")
exten => 2,1,Return("three cheese blend")
exten => 3,1,Return("provolone")
exten => 4,1,Return("parmesan romano")
exten => 5,1,Return("feta cheese")

exten => i,1,NoOp
same => n,Espeak("Invalid topping.",any)
same => n,Goto(toppings)

[pizza-vegetable-select]
exten => start,1,NoOp
same => n(toppings),NoOp
same => n,Espeak("1 for jalapeno peppers",any)
same => n,Espeak("2 for green peppers",any)
same => n,Espeak("3 for banana peppers",any)
same => n,Espeak("4 for onions",any)
same => n,Espeak("5 for roma tomatoes",any)
same => n,Espeak("6 for baby portabellos",any)
same => n,Espeak("7 for black olives",any)
same => n,Espeak("8 for pineapple",any)
same => n,WaitExten

exten => 0,1,Goto(pizza-done,start,1)

exten => 1,1,Return("jalapeno peppers")
exten => 2,1,Return("green peppers")
exten => 3,1,Return("banana peppers")
exten => 4,1,Return("onions")
exten => 5,1,Return("roma tomatoes")
exten => 6,1,Return("baby portabellos")
exten => 7,1,Return("black olives")
exten => 8,1,Return("pineapple")

exten => i,1,NoOp
same => n,Espeak("Invalid topping.",any)
same => n,Goto(toppings)

[pizza-side-select]
exten => start,1,NoOp
same => n,Espeak("Which side would you like the topping on?",any)
same => n(sides),NoOp
same => n,Espeak("1 for left",any)
same => n,Espeak("2 for both",any)
same => n,Espeak("3 for right",any)
same => n,WaitExten

exten => 0,1,Goto(pizza-done,start,1)

exten => 1,1,Return("left")
exten => 2,1,Return("both")
exten => 3,1,Return("right")

exten => i,1,NoOp
same => n,Espeak("Invalid side.",any)
same => n,Goto(start,sides)

[pizza-done]
exten => start,1,NoOp
same => n,Espeak("Your order contains ${NPIZZAS} pizzas.",any)
same => n(prompt),Espeak("To order another pizza, press 1. To complete your order, press 0.",any)
same => n,WaitExten

exten => 1,1,Set(NPIZZAS=$[${NPIZZAS} + 1])
same => n,Goto(pizza-size-select,start,1)

exten => 0,1,Goto(pizza-payment-select,start,1)

exten => i,1,NoOp
same => n,Espeak("Invalid selection.",any)
same => n,Goto(start,prompt)

[pizza-payment-select]
exten => start,1,NoOp
same => n(prompt),Espeak("Press 1 to pay by credit card.",any)
same => n,Espeak("Press 2 to pay by cash.",any)
same => n,WaitExten

exten => 1,1,NoOp
same => n,Set(PAYMENT=credit)
same => n,System(pizza set-payment "${ORDER_ID}" "credit")
same => n,Goto(pizza-delivery-select,start,1)

exten => 2,1,NoOp
same => n,Set(PAYMENT=cash)
same => n,System(pizza set-payment "${ORDER_ID}" "cash")
same => n,Goto(pizza-delivery-select,start,1)

exten => i,1,NoOp
same => n,Espeak("Invalid payment method.",any)
same => n,Goto(start,prompt)

[pizza-delivery-select]
exten => start,1,NoOp
same => n,Espeak("Press 1 for delivery.",any)
same => n,Espeak("Press 2 for pick-up.",any)
same => n,WaitExten

exten => 1,1,NoOp
same => n,System(pizza set-delivery "${ORDER_ID}" "delivery")
same => n,GotoIf($["${PAYMENT}" = "credit"]?pizza-tip-set,start,1)
same => n,Goto(pizza-order-complete,start,1)

exten => 2,1,NoOp
same => n,System(pizza set-delivery "${ORDER_ID}" "pickup")
same => n,Goto(pizza-order-complete,start,1)

[pizza-tip-set]
exten => start,1,NoOp
same => n(prompt),Espeak("Enter the tip amount in dollars, or press 0 to pay in cash.",any)
same => n,WaitExten

exten => 0,1,System(pizza set-tip "${ORDER_ID}" cash)
same => n,Goto(pizza-order-complete,start,1)

exten => _XX,1,System(pizza set-tip "${ORDER_ID}" "${EXTEN}")
same => 2,Goto(pizza-order-complete,start,1)

exten => _X,1,System(pizza set-tip "${ORDER_ID}" "${EXTEN}")
same => 2,Goto(pizza-order-complete,start,1)

exten => i,1,NoOp
same => 2,Espeak("Invalid amount.",any)
same => 3,Goto(start,prompt)

[pizza-order-complete]
exten => start,1,NoOp
same => n,Espeak("Thank you for calling the Hackafay Dial-A-Pizza Hotline. Your order number is:",any)
same => n,SayDigits("${ORDER_ID}")
same => n,System(pizzacall 4106889312 "${ORDER_ID}")
same => n,Hangup

[pizza-order-send]

exten => start,1,NoOp
same => n,Answer
same => n,Record(/tmp/pizza_recording.wav)
same => n,Set(LAST=start)
same => n,Monitor(wav,pizza_order_${ORDER_ID},m)
same => n,Playback(silence)
same => n,WaitForSilence(1000,1,7)
same => n,Set(ORDER_TYPE=${SHELL(/usr/bin/pizza order-type "${ORDER_ID}"):0:-1})
same => n,Set(NPIZZAS=${SHELL(/usr/bin/pizza pizza-count "${ORDER_ID}"):0:-1})
same => n,Set(PAYMENT=${SHELL(/usr/bin/pizza payment-method "${ORDER_ID}"):0:-1})

same => n(text),Espeak("Hello. This is an automated pizza ordering system.",any,en-us)
same => n,Espeak("At any time, you may dial zero to repeat the previous message.",any,en-us)
same => n,Espeak("You may also dial star to repeat a specific message.",any,en-us)
same => n,Wait(1)
same => n,Goto(number,1)

exten => number,1,NoOp
same => n(text),Espeak("My phone number is:",any,en-us)
same => n,SayDigits(2408982516)
same => n,Playback(silence)
same => n,Set(LAST=number)
same => n,Wait(1)
same => n,Goto(type,1)

exten => type,1,NoOp
same => n(text),Espeak("This is a ${ORDER_TYPE} order.",any,en-us)
same => n,GotoIf($["${ORDER_TYPE}" = "delivery"]?address:skip)
same => n(address),Espeak("The address is 1, 2, 2, 2, Locust Avenue.",any,en-us)
same => n(skip),NoOp
same => n,Playback(silence)
same => n,Set(LAST=type)
same => n,Wait(1)
same => n,Goto(pizzas,1)

exten => pizzas,1,NoOp
;same => n(text),Espeak("You may dial zero at any time to repeat the last pizza.",any,en-us)
same => n,Set(PIZZA=1)
;same => n,Espeak("To repeat a specific pizza, dial the number listed with that pizza.",any,en-us)
same => n,Goto(subpizzas,1)

exten => subpizzas,1,NoOp
same => n(subpizza),NoOp
same => n,Set(PSIZE=${SHELL(/usr/bin/pizza pizza-size "${ORDER_ID}" "${PIZZA}"):0:-1})
same => n,Set(PTOPPINGS=${SHELL(/usr/bin/pizza pizza-toppings "${ORDER_ID}" "${PIZZA}"):0:-1})
same => n(text),Espeak("Pizza number ${PIZZA}:",any,en-us)
same => n,Espeak("${PSIZE} with ${PTOPPINGS}",any,en-us)
same => n,Playback(silence)
same => n,Set(LAST=subpizzas)
same => n,Wait(1)
same => n,Set(PIZZA=$[${PIZZA} + 1])
same => n,GotoIf($["${PIZZA}" > "${NPIZZAS}"]?payment,1)
same => n,Goto(subpizza)

exten => payment,1,NoOp
same => n(text),Espeak("I would like to pay by ${PAYMENT}.",any,en-us)
same => n,GotoIf($["${PAYMENT:0:4}" = "cred"]?ccnum:skip)
same => n(ccnum),Espeak("My credit card number is:",any,en-us)
same => n,SayDigits({{ salt['pillar.get']('people:pizza_creditcard') }})
same => n,Espeak("Expiration Date:",any,en-us)
same => n,Playback(digits/mon-7)
same => n,SayNumber(2015)
same => n,Espeak("Security Code:",any,en-us)
same => n,SayDigits(123)
same => n(skip),NoOp
same => n,Playback(silence)
same => n,Set(LAST=payment)
same => n,Goto(repeat,1)

exten => repeat,1,NoOp
same => n,Espeak("The order is complete. You may press zero to repeat the last pizza, or star to repeat any part of the order, or hang up if the order was successful. Thank you and have a nice day. This message will now repeat.",any,en-us)
same => n,Set(LAST=start)
same => n,Goto(start,text)

exten => 0,1,NoOp("Going to ${LAST},text")
same => n,Goto(${LAST},text)

exten => *,1,Goto(pizza-order-send-menu,start,1)
exten => i,1,GotoIf($["${EXTEN}" <= "${NPIZZAS}"]?ok:notok)
same => n(ok),Set(PIZZA=${EXTEN})
same => n,Goto(subpizzas,1)
same => n(notok),Goto(${LAST},text)

[pizza-order-send-menu]
exten => start,1,NoOp
same => n(text),Espeak("To repeat my phone number, press 1. To repeat the order type or delivery address, press 2. To repeat payment information, press 3. To repeat the pizza list, press 4. To repeat everything, press 5 or stay on the line.")
same => n,WaitExten(10)

exten => 1,1,NoOp
same => n,Set(LAST=number)
same => n,Goto(pizza-order-send,${LAST},text)

exten => 2,1,NoOp
same => n,Set(LAST=type)
same => n,Goto(pizza-order-send,${LAST},text)

exten => 3,1,NoOp
same => n,Set(LAST=payment)
same => n,Goto(pizza-order-send,${LAST},text)

exten => 4,1,NoOp
same => n,Set(LAST=pizzas)
same => n,Goto(pizza-order-send,${LAST},text)

exten => 5,1,NoOp
same => n,Set(LAST=start)
same => n,Goto(pizza-order-send,${LAST},text)

exten => i,1,Goto(start,text)
exten => t,1,Goto(5,1)

[downtime]
exten => start,1,NoOp
same => n,Answer
same => n,Espeak("Attention Hackafe residents. This is a warning that scheduled downtime is imminent. I repeat, scheduled downtime is imminent. Thank you.")
same => n,Hangup

[umbc]
exten => start,1,NoOp
same => n,Set(PAGE=${CURL(isumbcopen.com/api)})
same => n,Espeak("Welcome to the Is U. M. B. C. Open Hotline.",any)
same => n,Espeak("Current status: ${PAGE}",any)
same => n,Espeak("Thank you for calling the Is U. M. B. C. Open Hotline.",any)
same => n(letitgo),Playback(hackafe/letitgo)
same => n,Goto(letitgo)

[menus]
exten => 77,1,Goto(pizza-order-send,start,1)

exten => 4444,1,Goto(wakeup-target,1,1)

exten => 1234,1,Goto(inbound,s,1)

exten => 7,1,Goto(pizza-start,start,1)

exten => 8622,1,Goto(umbc,start,1)

; Main Menu
exten => 1337,1,Answer()
exten => 1337,n,Espeak("Welcome to the Hackaf-own",any)
exten => 1337,n,Espeak("Dial 0 at any time to return to the main menu",any)
exten => 1337,n,Espeak("Menu items:",any)
exten => 1337,n,Espeak("1: X10 Control",any)
exten => 1337,n,Espeak("2: Wake-up Call",any)
exten => 1337,n,Espeak("3: Intercom",any)
exten => 1337,n,Espeak("7: Pizza",any)
;exten => 1337,n,Espeak("3: Directory",any)
exten => 1337,n(wait),WaitExten(10)
exten => 1337,n,Goto(menus,1337,1)

exten => 1,1,Goto(x10-menu,1,1)

exten => 2,1,Goto(wakeup-menu,begin,1)

exten => 3,1,Goto(intercom,*,1)

exten => 8,1,Goto(eight,start,1)

exten => i,1,Espeak("Selection not recognized. Try again.",any)
same => n,Goto(menus,1337,wai)

;exten => t,t,Goto(internal,1337,1)

exten => 999,1,Playback(hackafe/emergency)
exten => 999,n,Hangup

exten => 01189998819991197253,1,Playback(followme/pls-hold-while-try)
exten => 01189998819991197253,n,Playback(hackafe/awesome)
exten => 01189998819991197253,n,Playback(followme/sorry)
exten => 01189998819991197253,n,Hangup

exten => 43667,1,Answer
exten => 43667,n,System(/usr/bin/curl http://idiotic/api/item/garage_door_opener/command/on)
exten => 43667,n,Espeak("Opening the garage door!",any)
exten => 43667,n,Hangup

exten => 832,1,Answer
exten => 832,n,System(/usr/bin/make-call ${CALLERID(num)} Espeak "Your tea is ready" 300)
exten => 832,n,Espeak("I will remind you about your tea!")
exten => 832,n,Espeak("Goodbye!")
exten => 832,n,Hangup

exten => 4832,1,Answer
exten => 4832,n,System(/usr/bin/make-call ${CALLERID(num)} Espeak "Your green tea is ready" 150)
exten => 4832,n,Espeak("I will remind you about your green tea!")
exten => 4832,n,Espeak("Goodbye!")
exten => 4832,n,Hangup

exten => t,1,Playback(vm-goodbye)
exten => t,n,Hangup

exten => 2999,1,VoicemailMain(${CALLERIDNUM})

[rooms]
exten => 7227,1,Dial(Skinny/den-line,20)
exten => 7227,101,Hangup

exten => 427,1,Dial(SIP/garage&SIP/garage2,20)
exten => 427,101,Hangup

exten => 548,1,Dial(SIP/kitchen,20)
exten => 548,101,Hangup

exten => 336,1,Dial(SIP/den&SIP/den2,20)
exten => 336,101,Hangup

exten => 528,1,Dial(SIP/laundry,20)
same => 101,Hangup

exten => 729,1,Dial(SIP/payphone,20)
same => 101,Hangup

exten => 822,1,Dial(SIP/tablet,20)
same => 101,Hangup

exten => 726,1,Goto(528,1)

[eight]
exten => start,1,NoOp
same => n,Goto(eight,8,1)

exten => wait,1,NoOp
same => n,WaitExten

;exten => 8,1,Playback(hackafe/eight)
exten => 8,1,System("/usr/bin/eight.py")
same => n,Espeak("Eight.",any,en-us)
same => n,Goto(eight,wait,1)

exten => _X!,1,Goto(eight,wait,1)
exten => t,1,Goto(eight,wait,1)
exten => i,1,Goto(eight,wait,1)

[intercoms]
exten => 427**,1,Answer()
same => n,System(astcall-listen "${CHANNEL}" intercom-garage)
same => n,ConfBridge(1,intercom_bridge,intercom_source)
same => n,101,Hangup

exten => 427*,1,Answer()
exten => 427*,n,System(astcall "${CHANNEL}" intercom-garage)
exten => 427*,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => 427*,101,Hangup

exten => 336**,1,Answer()
same => n,System(astcall-listen "${CHANNEL}" intercom-den)
same => n,ConfBridge(1,intercom_bridge,intercom_source)
same => n,101,Hangup

exten => 336*,1,Answer()
exten => 336*,n,System(astcall "${CHANNEL}" "intercom-den&intercom-den2")
exten => 336*,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => 336*,101,Hangup

exten => 395*,1,Answer()
exten => 395*,n,System(astcall "${CHANNEL}" intercom-dylan)
exten => 395*,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => 395*,101,Hangup

exten => 627**,1,Answer()
same => n,System(astcall-listen "${CHANNEL}" intercom-mark)
same => n,ConfBridge(1,intercom_bridge,intercom_source)
same => n,101,Hangup

exten => 627*,1,Answer()
exten => 627*,n,System(astcall "${CHANNEL}" intercom-mark)
exten => 627*,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => 627*,101,Hangup

exten => 662*,1,Answer()
exten => 662*,n,System(astcall "${CHANNEL}" intercom-noah)
exten => 662*,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => 662*,101,Hangup

exten => 537*,1,Answer()
same => n,System(astcall "${CHANNEL}" intercom-noah)
same => n,ConfBridge(1,intercom_bridge,intercom_source)
same => 101,Hangup

exten => 727*,1,Answer()
exten => 727*,n,System(astcall "${CHANNEL}" intercom-sasha)
exten => 727*,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => 727*,101,Hangup

exten => 468,1,Goto(*,1)

exten => *,1,Answer()
exten => *,n,System(astcall "${CHANNEL}")
exten => *,n,ConfBridge(1,intercom_bridge,intercom_source)
exten => *,n,Hangup()

[bridge_listen_entry]
exten => 468,1,Answer()
same => n,Playback(beep)
same => n,Playback(beep)
same => n,Espeak("Intercom listening mode enabled")
same => n,Playback(beep)
same => n,Playback(beep)
same => n,ConfBridge(1,intercom_bridge,intercom_listen,intercom_menu_dest)

[bridge_entry]
exten => 468,1,Answer()
exten => 468,n,Playback(beep)
exten => 468,n,Playback(beep)
exten => 468,n,ConfBridge(1,intercom_bridge,intercom_dest,intercom_menu_dest)

[test]
exten => 8378,1,Answer()
same => n,Monitor(wav,alexa,o)
same => n,Ring(SIP/kitchen)
same => n,Hangup()

#include "extensions-test.conf"

[payphone-totalizer]
exten => 0,1,Answer
;exten => 0,2,AGI(payphone.agi)
exten => 0,3,Hangup

[super-alarm]
exten => start,1,NoOp
same => n,Read(user_code,hackafe/awesome,5,1023,i)
same => n,GotoIf($["${user_code}" = "${CODE}"]?super-alarm-done,start,1:super-alarm,start,1)
same => n,Goto(start,1)

exten => t,1,NoOp
same => n,Goto(start,1)

exten => i,1,NoOp
same => n,Goto(start,1)

exten => h,1,NoOp
same => n,System("/usr/bin/redial-alarm.sh '${TARGET}' '${CODE}'")

[super-alarm-done]
exten => start,1,NoOp
